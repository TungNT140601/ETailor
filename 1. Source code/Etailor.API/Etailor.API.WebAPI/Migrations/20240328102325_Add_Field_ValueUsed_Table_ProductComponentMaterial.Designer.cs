// <auto-generated />
using System;
using Etailor.API.Repository.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Etailor.API.WebAPI.Migrations
{
    [DbContext(typeof(ETailor_DBContext))]
    [Migration("20240328102325_Add_Field_ValueUsed_Table_ProductComponentMaterial")]
    partial class Add_Field_ValueUsed_Table_ProductComponentMaterial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Blog", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Hastag")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("StaffId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UrlPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("StaffId");

                    b.ToTable("Blog", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.BodyAttribute", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BodySizeId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ProfileBodyId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("BodySizeId");

                    b.HasIndex("ProfileBodyId");

                    b.ToTable("BodyAttribute", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.BodySize", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("BodyIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("BodyPart")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("GuideVideoLink")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("MaxValidValue")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("MinValidValue")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("BodySize", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Chat", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("OrderId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Chat", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ChatList", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ChatId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("FromCus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Images")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ReplierId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("ReplierId");

                    b.ToTable("ChatList", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Component", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ComponentTypeId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Default")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Index")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ProductTemplateId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentTypeId");

                    b.HasIndex("ProductTemplateId");

                    b.ToTable("Component", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ComponentStage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ComponentTypeId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TemplateStageId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentTypeId");

                    b.HasIndex("TemplateStageId");

                    b.ToTable("ComponentStage", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ComponentType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ComponentType", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("EmailVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Gender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Otpnumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("OTPNumber");

                    b.Property<DateTime?>("OtptimeLimit")
                        .HasColumnType("datetime")
                        .HasColumnName("OTPTimeLimit");

                    b.Property<bool?>("Otpused")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("OTPUsed")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool?>("PhoneVerified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SecrectKeyLogin")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Discount", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("ConditionPriceMax")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("ConditionPriceMin")
                        .HasColumnType("decimal(18,0)");

                    b.Property<int?>("ConditionProductMin")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<float?>("DiscountPercent")
                        .HasColumnType("float(18)");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Discount", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Mastery", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StaffId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("StaffId");

                    b.ToTable("Mastery", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Material", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MaterialCategoryId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialCategoryId");

                    b.ToTable("Material", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.MaterialCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MaterialTypeId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("PricePerUnit")
                        .HasColumnType("decimal(38,17)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("MaterialCategory", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.MaterialType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Unit")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.ToTable("MaterialType", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ReadTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SendTime")
                        .HasColumnType("datetime");

                    b.Property<string>("StaffId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("AfterDiscountPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("ApproveTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CancelTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreaterId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CusAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CusEmail")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CusName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CusPhone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(18,0)");

                    b.Property<string>("DiscountCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DiscountId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("DiscountPrice")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("PaidMoney")
                        .HasColumnType("decimal(18,0)");

                    b.Property<bool?>("PayDeposit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.Property<decimal?>("TotalPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("TotalProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("UnPaidMoney")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("CreaterId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DiscountId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.OrderMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsCusMaterial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("MaterialId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("OrderId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("ValueUsed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,3)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderMaterial", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Payment", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,0)");

                    b.Property<decimal?>("AmountAfterRefund")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("PayTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("PayType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PaymentRefundId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Platform")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StaffCreateId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("PaymentRefundId");

                    b.HasIndex("StaffCreateId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("EvidenceImage")
                        .HasColumnType("text");

                    b.Property<string>("FabricMaterialId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Index")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrderId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProductTemplateId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ReferenceProfileBodyId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("SaveOrderComponents")
                        .HasColumnType("text");

                    b.Property<string>("StaffMakerId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("Id");

                    b.HasIndex("FabricMaterialId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductTemplateId");

                    b.HasIndex("ReferenceProfileBodyId");

                    b.HasIndex("StaffMakerId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductBodySize", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BodySizeId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("ProductId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Value")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("BodySizeId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductBodySize", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductComponent", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ComponentId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(2550)");

                    b.Property<string>("NoteImage")
                        .HasColumnType("text");

                    b.Property<string>("ProductStageId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ComponentId");

                    b.HasIndex("ProductStageId");

                    b.ToTable("ProductComponent", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductComponentMaterial", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("MaterialId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ProductComponentId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("decimal(18,0)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("ProductComponentId");

                    b.ToTable("ProductComponentMaterial", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductStage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime");

                    b.Property<string>("EvidenceImage")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FinishTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ProductId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StaffId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("StageNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("TaskIndex")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TemplateStageId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("StaffId");

                    b.HasIndex("TemplateStageId");

                    b.ToTable("ProductStage", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductTemplate", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CollectionImage")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(2550)
                        .HasColumnType("nvarchar(2550)");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,0)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ThumbnailImage")
                        .HasColumnType("text");

                    b.Property<string>("UrlPath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductTemplate", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProfileBody", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CustomerId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool?>("IsLocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StaffId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StaffId");

                    b.ToTable("ProfileBody", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Staff", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("LastLoginDeviceToken")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((2))");

                    b.Property<string>("SecrectKeyLogin")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.TemplateBodySize", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BodySizeId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ProductTemplateId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("BodySizeId");

                    b.HasIndex("ProductTemplateId");

                    b.ToTable("TemplateBodySize", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.TemplateStage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreatedTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("InactiveTime")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("LastestUpdatedTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .HasMaxLength(155)
                        .HasColumnType("nvarchar(155)");

                    b.Property<string>("ProductTemplateId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("StageNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TemplateStageId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ProductTemplateId");

                    b.HasIndex("TemplateStageId");

                    b.ToTable("TemplateStage", (string)null);
                });

            modelBuilder.Entity("Etailor.API.Repository.StoreProcModels.OrderDashboard", b =>
                {
                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("Total")
                        .HasColumnType("int");

                    b.ToTable("OrderDashboard");
                });

            modelBuilder.Entity("Etailor.API.Repository.StoreProcModels.StaffWithTotalTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Role")
                        .HasColumnType("int");

                    b.Property<int?>("TotalTask")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("StaffWithTotalTask");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Blog", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "Staff")
                        .WithMany("Blogs")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Blog__StaffId__22951AFD");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.BodyAttribute", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.BodySize", "BodySize")
                        .WithMany("BodyAttributes")
                        .HasForeignKey("BodySizeId")
                        .HasConstraintName("FK__BodyAttri__BodyS__3D7E1B63");

                    b.HasOne("Etailor.API.Repository.EntityModels.ProfileBody", "ProfileBody")
                        .WithMany("BodyAttributes")
                        .HasForeignKey("ProfileBodyId")
                        .HasConstraintName("FK__BodyAttri__Profi__3C89F72A");

                    b.Navigation("BodySize");

                    b.Navigation("ProfileBody");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Chat", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Order", "Order")
                        .WithMany("Chats")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Chat__OrderId__125EB334");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ChatList", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Chat", "Chat")
                        .WithMany("ChatLists")
                        .HasForeignKey("ChatId")
                        .HasConstraintName("FK__ChatHisto__ChatI__162F4418");

                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "Replier")
                        .WithMany("ChatLists")
                        .HasForeignKey("ReplierId")
                        .HasConstraintName("FK__ChatHisto__Repli__17236851");

                    b.Navigation("Chat");

                    b.Navigation("Replier");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Component", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.ComponentType", "ComponentType")
                        .WithMany("Components")
                        .HasForeignKey("ComponentTypeId")
                        .HasConstraintName("FK__Component__Compo__5A1A5A11");

                    b.HasOne("Etailor.API.Repository.EntityModels.ProductTemplate", "ProductTemplate")
                        .WithMany("Components")
                        .HasForeignKey("ProductTemplateId")
                        .HasConstraintName("FK__Component__Produ__5B0E7E4A");

                    b.Navigation("ComponentType");

                    b.Navigation("ProductTemplate");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ComponentStage", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.ComponentType", "ComponentType")
                        .WithMany("ComponentStages")
                        .HasForeignKey("ComponentTypeId")
                        .HasConstraintName("FK__Component__Compo__5649C92D");

                    b.HasOne("Etailor.API.Repository.EntityModels.TemplateStage", "TemplateStage")
                        .WithMany("ComponentStages")
                        .HasForeignKey("TemplateStageId")
                        .HasConstraintName("FK__Component__Templ__573DED66");

                    b.Navigation("ComponentType");

                    b.Navigation("TemplateStage");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ComponentType", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Category", "Category")
                        .WithMany("ComponentTypes")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Component__Categ__52793849");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Mastery", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Category", "Category")
                        .WithMany("Masteries")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Mastery__Categor__2E06CDA9");

                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "Staff")
                        .WithMany("Masteries")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Mastery__StaffId__2EFAF1E2");

                    b.Navigation("Category");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Material", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.MaterialCategory", "MaterialCategory")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialCategoryId")
                        .HasConstraintName("FK__Material__Materi__004002F9");

                    b.Navigation("MaterialCategory");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.MaterialCategory", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.MaterialType", "MaterialType")
                        .WithMany("MaterialCategories")
                        .HasForeignKey("MaterialTypeId")
                        .HasConstraintName("FK__MaterialC__Mater__7C6F7215");

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Notification", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Customer", "Customer")
                        .WithMany("Notifications")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Notificat__Custo__1CDC41A7");

                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "Staff")
                        .WithMany("Notifications")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Notificat__Staff__1DD065E0");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Order", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "Creater")
                        .WithMany("Orders")
                        .HasForeignKey("CreaterId")
                        .HasConstraintName("FK__Order__CreaterId__62AFA012");

                    b.HasOne("Etailor.API.Repository.EntityModels.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Order__CustomerI__61BB7BD9");

                    b.HasOne("Etailor.API.Repository.EntityModels.Discount", "Discount")
                        .WithMany("Orders")
                        .HasForeignKey("DiscountId")
                        .HasConstraintName("FK__Order__DiscountI__63A3C44B");

                    b.Navigation("Creater");

                    b.Navigation("Customer");

                    b.Navigation("Discount");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.OrderMaterial", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Material", "Material")
                        .WithMany("OrderMaterials")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK__OrderMate__Mater__08D548FA");

                    b.HasOne("Etailor.API.Repository.EntityModels.Order", "Order")
                        .WithMany("OrderMaterials")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__OrderMate__Order__09C96D33");

                    b.Navigation("Material");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Payment", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Order", "Order")
                        .WithMany("Payments")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Payment__OrderId__0E8E2250");

                    b.HasOne("Etailor.API.Repository.EntityModels.Payment", "PaymentRefund")
                        .WithMany("RefundOfPayments")
                        .HasForeignKey("PaymentRefundId")
                        .HasConstraintName("FK__Payment__PaymentRefund__1A25A48");

                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "StaffCreate")
                        .WithMany("Payments")
                        .HasForeignKey("StaffCreateId")
                        .HasConstraintName("FK__Payment__Staff_Create__1A25A48");

                    b.Navigation("Order");

                    b.Navigation("PaymentRefund");

                    b.Navigation("StaffCreate");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Product", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Material", "FabricMaterial")
                        .WithMany("Products")
                        .HasForeignKey("FabricMaterialId")
                        .HasConstraintName("FK__Product__Fabric_Material__6B44E613");

                    b.HasOne("Etailor.API.Repository.EntityModels.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK__Product__OrderId__6B44E613");

                    b.HasOne("Etailor.API.Repository.EntityModels.ProductTemplate", "ProductTemplate")
                        .WithMany("Products")
                        .HasForeignKey("ProductTemplateId")
                        .HasConstraintName("FK__Product__Product__6C390A4C");

                    b.HasOne("Etailor.API.Repository.EntityModels.ProfileBody", "ReferenceProfileBody")
                        .WithMany("Products")
                        .HasForeignKey("ReferenceProfileBodyId")
                        .HasConstraintName("FK__Product__ProfileBody__6B44E613");

                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "StaffMaker")
                        .WithMany("Products")
                        .HasForeignKey("StaffMakerId")
                        .HasConstraintName("FK__Product__Staff_Maker__6B44E613");

                    b.Navigation("FabricMaterial");

                    b.Navigation("Order");

                    b.Navigation("ProductTemplate");

                    b.Navigation("ReferenceProfileBody");

                    b.Navigation("StaffMaker");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductBodySize", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.BodySize", "BodySize")
                        .WithMany("ProductBodySizes")
                        .HasForeignKey("BodySizeId")
                        .HasConstraintName("FK__ProductBo__BodyS__2759D01A");

                    b.HasOne("Etailor.API.Repository.EntityModels.Product", "Product")
                        .WithMany("ProductBodySizes")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductBo__Produ__2665ABE1");

                    b.Navigation("BodySize");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductComponent", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Component", "Component")
                        .WithMany("ProductComponents")
                        .HasForeignKey("ComponentId")
                        .HasConstraintName("FK__ProductCo__Compo__041093DD");

                    b.HasOne("Etailor.API.Repository.EntityModels.ProductStage", "ProductStage")
                        .WithMany("ProductComponents")
                        .HasForeignKey("ProductStageId")
                        .HasConstraintName("FK__ProductCo__Produ__0504B816");

                    b.Navigation("Component");

                    b.Navigation("ProductStage");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductComponentMaterial", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Material", "Material")
                        .WithMany("ProductComponentMaterials")
                        .HasForeignKey("MaterialId")
                        .HasConstraintName("FK__ProductCo__Mater__32CB82C6");

                    b.HasOne("Etailor.API.Repository.EntityModels.ProductComponent", "ProductComponent")
                        .WithMany("ProductComponentMaterials")
                        .HasForeignKey("ProductComponentId")
                        .HasConstraintName("FK__ProductCo__Produ__31D75E8D");

                    b.Navigation("Material");

                    b.Navigation("ProductComponent");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductStage", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Product", "Product")
                        .WithMany("ProductStages")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductSt__Produ__72E607DB");

                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "Staff")
                        .WithMany("ProductStages")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__ProductSt__Staff__70FDBF69");

                    b.HasOne("Etailor.API.Repository.EntityModels.TemplateStage", "TemplateStage")
                        .WithMany("ProductStages")
                        .HasForeignKey("TemplateStageId")
                        .HasConstraintName("FK__ProductSt__Templ__71F1E3A2");

                    b.Navigation("Product");

                    b.Navigation("Staff");

                    b.Navigation("TemplateStage");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductTemplate", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Category", "Category")
                        .WithMany("ProductTemplates")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductTe__Categ__442B18F2");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProfileBody", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.Customer", "Customer")
                        .WithMany("ProfileBodies")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__ProfileBo__Custo__33008CF0");

                    b.HasOne("Etailor.API.Repository.EntityModels.Staff", "Staff")
                        .WithMany("ProfileBodies")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__ProfileBo__Staff__33F4B129");

                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.TemplateBodySize", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.BodySize", "BodySize")
                        .WithMany("TemplateBodySizes")
                        .HasForeignKey("BodySizeId")
                        .HasConstraintName("FK__TemplateB__BodyS__49E3F248");

                    b.HasOne("Etailor.API.Repository.EntityModels.ProductTemplate", "ProductTemplate")
                        .WithMany("TemplateBodySizes")
                        .HasForeignKey("ProductTemplateId")
                        .HasConstraintName("FK__TemplateB__Produ__48EFCE0F");

                    b.Navigation("BodySize");

                    b.Navigation("ProductTemplate");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.TemplateStage", b =>
                {
                    b.HasOne("Etailor.API.Repository.EntityModels.ProductTemplate", "ProductTemplate")
                        .WithMany("TemplateStages")
                        .HasForeignKey("ProductTemplateId")
                        .HasConstraintName("FK__TemplateS__Produ__4CC05EF3");

                    b.HasOne("Etailor.API.Repository.EntityModels.TemplateStage", "TemplateStageNavigation")
                        .WithMany("InverseTemplateStageNavigation")
                        .HasForeignKey("TemplateStageId")
                        .HasConstraintName("FK__TemplateS__Templ__4DB4832C");

                    b.Navigation("ProductTemplate");

                    b.Navigation("TemplateStageNavigation");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.BodySize", b =>
                {
                    b.Navigation("BodyAttributes");

                    b.Navigation("ProductBodySizes");

                    b.Navigation("TemplateBodySizes");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Category", b =>
                {
                    b.Navigation("ComponentTypes");

                    b.Navigation("Masteries");

                    b.Navigation("ProductTemplates");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Chat", b =>
                {
                    b.Navigation("ChatLists");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Component", b =>
                {
                    b.Navigation("ProductComponents");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ComponentType", b =>
                {
                    b.Navigation("ComponentStages");

                    b.Navigation("Components");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Customer", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("ProfileBodies");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Discount", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Material", b =>
                {
                    b.Navigation("OrderMaterials");

                    b.Navigation("ProductComponentMaterials");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.MaterialCategory", b =>
                {
                    b.Navigation("Materials");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.MaterialType", b =>
                {
                    b.Navigation("MaterialCategories");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Order", b =>
                {
                    b.Navigation("Chats");

                    b.Navigation("OrderMaterials");

                    b.Navigation("Payments");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Payment", b =>
                {
                    b.Navigation("RefundOfPayments");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Product", b =>
                {
                    b.Navigation("ProductBodySizes");

                    b.Navigation("ProductStages");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductComponent", b =>
                {
                    b.Navigation("ProductComponentMaterials");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductStage", b =>
                {
                    b.Navigation("ProductComponents");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProductTemplate", b =>
                {
                    b.Navigation("Components");

                    b.Navigation("Products");

                    b.Navigation("TemplateBodySizes");

                    b.Navigation("TemplateStages");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.ProfileBody", b =>
                {
                    b.Navigation("BodyAttributes");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.Staff", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("ChatLists");

                    b.Navigation("Masteries");

                    b.Navigation("Notifications");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("ProductStages");

                    b.Navigation("Products");

                    b.Navigation("ProfileBodies");
                });

            modelBuilder.Entity("Etailor.API.Repository.EntityModels.TemplateStage", b =>
                {
                    b.Navigation("ComponentStages");

                    b.Navigation("InverseTemplateStageNavigation");

                    b.Navigation("ProductStages");
                });
#pragma warning restore 612, 618
        }
    }
}
